# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import drink_pb2 as drink__pb2


class DrinkServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListDrinks = channel.unary_unary(
            '/coffee_shop.DrinkService/ListDrinks',
            request_serializer=drink__pb2.ListDrinksRequest.SerializeToString,
            response_deserializer=drink__pb2.ListDrinksResponse.FromString,
        )
        self.GetDrink = channel.unary_unary(
            '/coffee_shop.DrinkService/GetDrink',
            request_serializer=drink__pb2.GetDrinkRequest.SerializeToString,
            response_deserializer=drink__pb2.Drink.FromString,
        )
        self.CreateDrink = channel.unary_unary(
            '/coffee_shop.DrinkService/CreateDrink',
            request_serializer=drink__pb2.CreateDrinkRequest.SerializeToString,
            response_deserializer=drink__pb2.Drink.FromString,
        )
        self.UpdateDrink = channel.unary_unary(
            '/coffee_shop.DrinkService/UpdateDrink',
            request_serializer=drink__pb2.UpdateDrinkRequest.SerializeToString,
            response_deserializer=drink__pb2.Drink.FromString,
        )
        self.DeleteDrink = channel.unary_unary(
            '/coffee_shop.DrinkService/DeleteDrink',
            request_serializer=drink__pb2.DeleteDrinkRequest.SerializeToString,
            response_deserializer=drink__pb2.DeleteDrinkResponse.FromString,
        )


class DrinkServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListDrinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDrink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        return drink__pb2.Drink(id='1', name='Ice Coffee', description='Wellnown coffee', price=2.5)
        # context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        # context.set_details('Method not implemented!')
        # raise NotImplementedError('Method not implemented!')

    def CreateDrink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDrink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDrink(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DrinkServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'ListDrinks': grpc.unary_unary_rpc_method_handler(
            servicer.ListDrinks,
            request_deserializer=drink__pb2.ListDrinksRequest.FromString,
            response_serializer=drink__pb2.ListDrinksResponse.SerializeToString,
        ),
        'GetDrink': grpc.unary_unary_rpc_method_handler(
            servicer.GetDrink,
            request_deserializer=drink__pb2.GetDrinkRequest.FromString,
            response_serializer=drink__pb2.Drink.SerializeToString,
        ),
        'CreateDrink': grpc.unary_unary_rpc_method_handler(
            servicer.CreateDrink,
            request_deserializer=drink__pb2.CreateDrinkRequest.FromString,
            response_serializer=drink__pb2.Drink.SerializeToString,
        ),
        'UpdateDrink': grpc.unary_unary_rpc_method_handler(
            servicer.UpdateDrink,
            request_deserializer=drink__pb2.UpdateDrinkRequest.FromString,
            response_serializer=drink__pb2.Drink.SerializeToString,
        ),
        'DeleteDrink': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteDrink,
            request_deserializer=drink__pb2.DeleteDrinkRequest.FromString,
            response_serializer=drink__pb2.DeleteDrinkResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'coffee_shop.DrinkService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class DrinkService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListDrinks(request,
                   target,
                   options=(),
                   channel_credentials=None,
                   call_credentials=None,
                   insecure=False,
                   compression=None,
                   wait_for_ready=None,
                   timeout=None,
                   metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coffee_shop.DrinkService/ListDrinks',
                                             drink__pb2.ListDrinksRequest.SerializeToString,
                                             drink__pb2.ListDrinksResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDrink(request,
                 target,
                 options=(),
                 channel_credentials=None,
                 call_credentials=None,
                 insecure=False,
                 compression=None,
                 wait_for_ready=None,
                 timeout=None,
                 metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coffee_shop.DrinkService/GetDrink',
                                             drink__pb2.GetDrinkRequest.SerializeToString,
                                             drink__pb2.Drink.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDrink(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coffee_shop.DrinkService/CreateDrink',
                                             drink__pb2.CreateDrinkRequest.SerializeToString,
                                             drink__pb2.Drink.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDrink(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coffee_shop.DrinkService/UpdateDrink',
                                             drink__pb2.UpdateDrinkRequest.SerializeToString,
                                             drink__pb2.Drink.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDrink(request,
                    target,
                    options=(),
                    channel_credentials=None,
                    call_credentials=None,
                    insecure=False,
                    compression=None,
                    wait_for_ready=None,
                    timeout=None,
                    metadata=None):
        return grpc.experimental.unary_unary(request, target, '/coffee_shop.DrinkService/DeleteDrink',
                                             drink__pb2.DeleteDrinkRequest.SerializeToString,
                                             drink__pb2.DeleteDrinkResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
